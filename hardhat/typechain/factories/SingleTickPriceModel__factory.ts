/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SingleTickPriceModel } from "../SingleTickPriceModel";

export class SingleTickPriceModel__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _tickDegree: BigNumberish,
    overrides?: Overrides
  ): Promise<SingleTickPriceModel> {
    return super.deploy(
      _tickDegree,
      overrides || {}
    ) as Promise<SingleTickPriceModel>;
  }
  getDeployTransaction(
    _tickDegree: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_tickDegree, overrides || {});
  }
  attach(address: string): SingleTickPriceModel {
    return super.attach(address) as SingleTickPriceModel;
  }
  connect(signer: Signer): SingleTickPriceModel__factory {
    return super.connect(signer) as SingleTickPriceModel__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SingleTickPriceModel {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SingleTickPriceModel;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_tickDegree",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "priceToTick",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tickDegree",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "tick",
        type: "uint16",
      },
    ],
    name: "tickToPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161064838038061064883398101604081905261002f9161004a565b6000805461ffff191661ffff92909216919091179055610075565b60006020828403121561005c57600080fd5b815161ffff8116811461006e57600080fd5b9392505050565b6105c4806100846000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806318f214b51461004657806397f3e62114610079578063f1c64e641461009a575b600080fd5b61005961005436600461035c565b6100bb565b6040805161ffff9384168152929091166020830152015b60405180910390f35b6000546100879061ffff1681565b60405161ffff9091168152602001610070565b6100ad6100a8366004610375565b6102a1565b604051908152602001610070565b6000806103e883116100cf57509091829150565b6000678ac7230489e80000841115610120576100f367016345785d8a0000856103c5565b6000549094506101089061ffff1660096103d9565b6101139060116103d9565b61011d9082610403565b90505b64174876e8008411156101685761013b633b9aca00856103c5565b6000549094506101509061ffff1660096103d9565b61015b9060096103d9565b6101659082610403565b90505b629896808411156101ad57610180620186a0856103c5565b6000549094506101959061ffff1660096103d9565b6101a09060056103d9565b6101aa9082610403565b90505b620186a08411156101f1576101c46103e8856103c5565b6000549094506101d99061ffff1660096103d9565b6101e49060036103d9565b6101ee9082610403565b90505b612710841115610233576102066064856103c5565b60005490945061021b9061ffff1660096103d9565b6102269060026103d9565b6102309082610403565b90505b6103e884111561026a57610248600a856103c5565b60005490945061025d9061ffff1660096103d9565b6102679082610403565b90505b6102748482610403565b905061ffff808216141561028b5793849350915050565b80610297816001610403565b9250925050915091565b6000805461ffff908116908316116102bb575061ffff1690565b600080546102ce9061ffff1660096103d9565b6000546102df9061ffff1685610429565b6102e9919061044c565b61ffff1690506102fa81600a610553565b60005461030c9061ffff1660096103d9565b60005461031d9061ffff1686610429565b610327919061055f565b61ffff166103359190610580565b61034082600261059f565b61034b90600a610553565b610355919061059f565b9392505050565b60006020828403121561036e57600080fd5b5035919050565b60006020828403121561038757600080fd5b813561ffff8116811461035557600080fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000826103d4576103d4610399565b500490565b600061ffff808316818516818304811182151516156103fa576103fa6103af565b02949350505050565b600061ffff808316818516808303821115610420576104206103af565b01949350505050565b600061ffff83811690831681811015610444576104446103af565b039392505050565b600061ffff8084168061046157610461610399565b92169190910492915050565b600181815b808511156104a857816000190482111561048e5761048e6103af565b8085161561049b57918102915b93841c9390800290610472565b509250929050565b6000826104bf5750600161054d565b816104cc5750600061054d565b81600181146104e257600281146104ec57610508565b600191505061054d565b60ff8411156104fd576104fd6103af565b50506001821b61054d565b5060208310610133831016604e8410600b841016171561052b575081810a61054d565b610535838361046d565b8060001904821115610549576105496103af565b0290505b92915050565b600061035583836104b0565b600061ffff8084168061057457610574610399565b92169190910692915050565b600081600019048311821515161561059a5761059a6103af565b500290565b600082198211156105b2576105b26103af565b50019056fea164736f6c634300080c000a";
